// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using qlsinhvien.Context;

#nullable disable

namespace qlsinhvien.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230912035301_Test")]
    partial class Test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("qlsinhvien.Entities.BoMon", b =>
                {
                    b.Property<int>("MaBoMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBoMon"));

                    b.Property<string>("TenBoMon")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("MaBoMon");

                    b.ToTable("BoMon");
                });

            modelBuilder.Entity("qlsinhvien.Entities.DiemSinhVien", b =>
                {
                    b.Property<int>("MaLopMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaSinhVien")
                        .HasColumnType("int");

                    b.Property<float>("DiemChuyenCan")
                        .HasColumnType("real");

                    b.Property<float>("DiemCuoiKi")
                        .HasColumnType("real");

                    b.Property<float>("DiemGiuaKi")
                        .HasColumnType("real");

                    b.Property<string>("GhiChu")
                        .HasColumnType("text");

                    b.Property<byte>("HocKi")
                        .HasColumnType("tinyint");

                    b.HasKey("MaLopMonHoc", "MaSinhVien");

                    b.HasIndex("MaSinhVien");

                    b.ToTable("DiemSinhVien");
                });

            modelBuilder.Entity("qlsinhvien.Entities.GiangVien", b =>
                {
                    b.Property<int>("MaGiangVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGiangVien"));

                    b.Property<string>("DiaChiThuongTru")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MaBoMon")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("QueQuan")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaGiangVien");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MaBoMon");

                    b.HasIndex("SoDienThoai")
                        .IsUnique();

                    b.ToTable("GiangVien");
                });

            modelBuilder.Entity("qlsinhvien.Entities.Khoa", b =>
                {
                    b.Property<int>("MaKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoa"));

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("MaKhoa");

                    b.HasIndex("TenKhoa")
                        .IsUnique();

                    b.ToTable("Khoa");
                });

            modelBuilder.Entity("qlsinhvien.Entities.KhoaBoMon", b =>
                {
                    b.Property<int>("MaBoMon")
                        .HasColumnType("int");

                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.HasKey("MaBoMon", "MaKhoa");

                    b.HasIndex("MaKhoa");

                    b.ToTable("Khoa_BoMon");
                });

            modelBuilder.Entity("qlsinhvien.Entities.LopMonHoc", b =>
                {
                    b.Property<int>("MaLopMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLopMonHoc"));

                    b.Property<int>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("TenLopMonHoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaLopMonHoc");

                    b.HasIndex("MaGiangVien");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("LopMonHoc");
                });

            modelBuilder.Entity("qlsinhvien.Entities.LopQuanLi", b =>
                {
                    b.Property<int>("MaLopQuanLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLopQuanLi"));

                    b.Property<int?>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int>("MaKhoa")
                        .HasColumnType("int");

                    b.Property<string>("TenLopQuanLi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaLopQuanLi");

                    b.HasIndex("MaGiangVien")
                        .IsUnique()
                        .HasFilter("[MaGiangVien] IS NOT NULL");

                    b.HasIndex("MaKhoa");

                    b.ToTable("LopQuanLi");
                });

            modelBuilder.Entity("qlsinhvien.Entities.MonHoc", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"));

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("bit");

                    b.Property<int>("MaBoMon")
                        .HasColumnType("int");

                    b.Property<int?>("MaMonTienQuyet")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SoTinChi")
                        .HasColumnType("tinyint");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaBoMon");

                    b.HasIndex("MaMonTienQuyet");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("qlsinhvien.Entities.NguoiDung", b =>
                {
                    b.Property<string>("TenNguoiDung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaGiangVien")
                        .HasColumnType("int");

                    b.Property<int?>("MaSinhVien")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenHienThi")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TenVaiTro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TenNguoiDung");

                    b.HasIndex("TenVaiTro");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("qlsinhvien.Entities.Quyen", b =>
                {
                    b.Property<string>("TenQuyen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenQuyen");

                    b.ToTable("Quyen");
                });

            modelBuilder.Entity("qlsinhvien.Entities.QuyenVaiTro", b =>
                {
                    b.Property<string>("TenQuyen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenVaiTro")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TenQuyen", "TenVaiTro");

                    b.HasIndex("TenVaiTro");

                    b.ToTable("Quyen_VaiTro");
                });

            modelBuilder.Entity("qlsinhvien.Entities.SinhVien", b =>
                {
                    b.Property<int>("MaSinhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSinhVien"));

                    b.Property<string>("DiaChiThuongTru")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MaLopQuanLi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayVaoTruong")
                        .HasColumnType("date");

                    b.Property<string>("QueQuan")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaSinhVien");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("MaLopQuanLi");

                    b.HasIndex("SoDienThoai")
                        .IsUnique();

                    b.ToTable("SinhVien");
                });

            modelBuilder.Entity("qlsinhvien.Entities.TokenHetHan", b =>
                {
                    b.Property<string>("MaToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("HetHanKhi")
                        .HasColumnType("datetime2");

                    b.HasKey("MaToken");

                    b.ToTable("TokenHetHan");
                });

            modelBuilder.Entity("qlsinhvien.Entities.VaiTro", b =>
                {
                    b.Property<string>("TenVaiTro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TenVaiTro");

                    b.ToTable("VaiTro");
                });

            modelBuilder.Entity("qlsinhvien.Entities.DiemSinhVien", b =>
                {
                    b.HasOne("qlsinhvien.Entities.LopMonHoc", "LopMonHoc")
                        .WithMany("DiemSinhViens")
                        .HasForeignKey("MaLopMonHoc")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("qlsinhvien.Entities.SinhVien", "SinhVien")
                        .WithMany("DiemSinhViens")
                        .HasForeignKey("MaSinhVien")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LopMonHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("qlsinhvien.Entities.GiangVien", b =>
                {
                    b.HasOne("qlsinhvien.Entities.BoMon", "BoMon")
                        .WithMany("GiangViens")
                        .HasForeignKey("MaBoMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoMon");
                });

            modelBuilder.Entity("qlsinhvien.Entities.KhoaBoMon", b =>
                {
                    b.HasOne("qlsinhvien.Entities.BoMon", "BoMon")
                        .WithMany("Khoas")
                        .HasForeignKey("MaBoMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qlsinhvien.Entities.Khoa", "Khoa")
                        .WithMany("BoMons")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoMon");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("qlsinhvien.Entities.LopMonHoc", b =>
                {
                    b.HasOne("qlsinhvien.Entities.GiangVien", "GiangVien")
                        .WithMany("LopMonHocs")
                        .HasForeignKey("MaGiangVien")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("qlsinhvien.Entities.MonHoc", "MonHoc")
                        .WithMany("LopMonHocs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("qlsinhvien.Entities.LopQuanLi", b =>
                {
                    b.HasOne("qlsinhvien.Entities.GiangVien", "GiangVien")
                        .WithOne("LopQuanLi")
                        .HasForeignKey("qlsinhvien.Entities.LopQuanLi", "MaGiangVien");

                    b.HasOne("qlsinhvien.Entities.Khoa", "Khoa")
                        .WithMany("LopQuanLis")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiangVien");

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("qlsinhvien.Entities.MonHoc", b =>
                {
                    b.HasOne("qlsinhvien.Entities.BoMon", "BoMon")
                        .WithMany("MonHocs")
                        .HasForeignKey("MaBoMon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qlsinhvien.Entities.MonHoc", "MonTienQuyet")
                        .WithMany()
                        .HasForeignKey("MaMonTienQuyet")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BoMon");

                    b.Navigation("MonTienQuyet");
                });

            modelBuilder.Entity("qlsinhvien.Entities.NguoiDung", b =>
                {
                    b.HasOne("qlsinhvien.Entities.VaiTro", "VaiTro")
                        .WithMany("NguoiDungs")
                        .HasForeignKey("TenVaiTro");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("qlsinhvien.Entities.QuyenVaiTro", b =>
                {
                    b.HasOne("qlsinhvien.Entities.Quyen", "Quyen")
                        .WithMany("VaiTros")
                        .HasForeignKey("TenQuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qlsinhvien.Entities.VaiTro", "VaiTro")
                        .WithMany("QuyenVaiTros")
                        .HasForeignKey("TenVaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quyen");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("qlsinhvien.Entities.SinhVien", b =>
                {
                    b.HasOne("qlsinhvien.Entities.LopQuanLi", "LopQuanLi")
                        .WithMany()
                        .HasForeignKey("MaLopQuanLi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopQuanLi");
                });

            modelBuilder.Entity("qlsinhvien.Entities.BoMon", b =>
                {
                    b.Navigation("GiangViens");

                    b.Navigation("Khoas");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("qlsinhvien.Entities.GiangVien", b =>
                {
                    b.Navigation("LopMonHocs");

                    b.Navigation("LopQuanLi");
                });

            modelBuilder.Entity("qlsinhvien.Entities.Khoa", b =>
                {
                    b.Navigation("BoMons");

                    b.Navigation("LopQuanLis");
                });

            modelBuilder.Entity("qlsinhvien.Entities.LopMonHoc", b =>
                {
                    b.Navigation("DiemSinhViens");
                });

            modelBuilder.Entity("qlsinhvien.Entities.MonHoc", b =>
                {
                    b.Navigation("LopMonHocs");
                });

            modelBuilder.Entity("qlsinhvien.Entities.Quyen", b =>
                {
                    b.Navigation("VaiTros");
                });

            modelBuilder.Entity("qlsinhvien.Entities.SinhVien", b =>
                {
                    b.Navigation("DiemSinhViens");
                });

            modelBuilder.Entity("qlsinhvien.Entities.VaiTro", b =>
                {
                    b.Navigation("NguoiDungs");

                    b.Navigation("QuyenVaiTros");
                });
#pragma warning restore 612, 618
        }
    }
}
